     1                                  bits    64
     2                                  
     3                                  section .data
     4                                  
     5                                  section .bss
     6 00000000 <res A0h>                 padding resq 20
     7                                  
     8                                  section .text
     9                                  global  _start
    10                                  
    11                                  _start:
    12                                    ;;; basic movements
    13                                  
    14 00000000 B805000000                mov rax, 5            ; rax = 0x0000000000000005
    15 00000005 B00A                      mov al,  10           ; al = 0x0A, rax = 0x000000000000000A
    16 00000007 B414                      mov ah,  20           ; ah = 0x14, rax = 0x000000000000140A
    17 00000009 66B88403                  mov ax,  900          ; rax = 0x0000000035A4E900
    18 0000000D B8FD3305AB                mov eax, 0xAB0533FD   ; rax = 0x00000000AB0533FD
    19 00000012 48B800FD3305AB0000-       mov rax, 0xAB0533FD00 ; rax = 0x000000AB0533FD00
    19 0000001B 00                 
    20 0000001C B8FD3305AB                mov eax, 0xAB0533FD   ; rax = 0x00000000AB0533FD - upper 32bits are cleared for a 32bit operation
    21                                  
    22                                  ; invalid label. hyphens are not allowed, labels cannot start with a number
    23                                  ; .my-lebel:
    24                                  ; 1he:
    25                                  
    26                                  
    27                                  ;;; unsigned expansions
    28                                  .unsigned_extensions:
    29                                    ; invalid instruction. movzx does not work with immediates
    30                                    ; movzx eax, 3
    31                                    ; movzx byte [padding], 3
    32                                    
    33                                    ; doesnt work because of the sizes
    34                                    ; movzx rax, qword [padding] ;-- same size
    35                                    ; movzx rax, dword [padding] ;-- does not work with 32bits. use `mov` since that will fill the upper 32bits with zeros
    36                                    ; movzx byte [padding], rax ;-- cannot movzx into memory. only register. also, smaller dest size
    37                                    
    38                                    ; cannot movzx into memory. only registers are allowed
    39                                    ; movzx dword [padding], ax
    40                                  
    41 00000021 480FB60425-               movzx rax, byte [padding] ; zeros out rax because when the OS reserves space for "padding", it initialises to zero
    41 00000026 [00000000]         
    42 0000002A B303                      mov   bl,  3              ; prepare register
    43 0000002C 480FB6C3                  movzx rax, bl             ; move and extend upper bits with zero
    44                                  
    45                                  
    46                                  ;;; signed expansions
    47                                  .signed_extensions:
    48 00000030 B314                      mov   bl,  20  ; prepare register
    49 00000032 B1EC                      mov   cl,  -20 ; prepare register
    50 00000034 480FBEC3                  movsx rax, bl  ; move and extend upper bits with MSb of bl's value, ie: 20
    51 00000038 480FBEC1                  movsx rax, cl  ; move and extend upper bits with MSb of cl's value, ie: -20
    52                                    
    53                                  
    54                                  
    55                                  ; program crashes on SIGSEGV
